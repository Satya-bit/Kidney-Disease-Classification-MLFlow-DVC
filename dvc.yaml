stages:
  data_ingestion:
    cmd: python -m src.cnnClassifier.pipeline.stage_01_data_ingestion
    deps:
      - src/cnnClassifier/pipeline/stage_01_data_ingestion.py
      - config/config.yaml
    outs:
      - artifacts/data_ingestion/KT_SCAN

  data_transformation:
    cmd: python -m src.cnnClassifier.pipeline.stage_02_data_transformation
    deps:
      - src/cnnClassifier/pipeline/stage_02_data_transformation.py
      - config/config.yaml
      - artifacts/data_ingestion/KT_SCAN
    params:
      - TRAIN
      - TEST
    outs:
      - artifacts/data_transformation

  prepare_base_model:
    cmd: python -m src.cnnClassifier.pipeline.stage_03_prepare_base_model
    deps:
      - src/cnnClassifier/pipeline/stage_03_prepare_base_model.py
      - config/config.yaml
    params:
      - IMAGE_SIZE
      - INCLUDE_TOP
      - CLASSES
      - WEIGHTS
      - LEARNING_RATE
    outs:
      - artifacts/prepare_base_model

  training:
    cmd: python -m src.cnnClassifier.pipeline.stage_04_model_trainer
    deps:
      - src/cnnClassifier/pipeline/stage_04_model_trainer.py
      - config/config.yaml
      - artifacts/data_transformation/split
      - artifacts/prepare_base_model
    params:
      - IMAGE_SIZE
      - EPOCHS
      - BATCH_SIZE
      - AUGMENTATION
      - LEARNING_RATE
      - MONITOR
      - PATIENCE
    outs:
      - artifacts/training/model.h5

  evaluation:
    cmd: python -m src.cnnClassifier.pipeline.stage_05_model_evaluation
    deps:
      - src/cnnClassifier/pipeline/stage_05_model_evaluation.py
      - config/config.yaml
      - artifacts/data_transformation/split
      - artifacts/training/model.h5

    params:
      - IMAGE_SIZE
      - BATCH_SIZE

    metrics:
    - scores.json:
         cache: false


    